{"ast":null,"code":"var _jsxFileName = \"/Users/mrk/Desktop/bia/react/basic/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const addTask = () => {\n    if (newTask) {\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: newTask,\n        completed: false\n      }]);\n      setNewTask('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Add a new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","addTask","id","Date","now","text","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/mrk/Desktop/bia/react/basic/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskList from './TaskList';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  const addTask = () => {\n    if (newTask) {\n      setTasks([...tasks, { id: Date.now(), text: newTask, completed: false }]);\n      setNewTask('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <input\n        type=\"text\"\n        value={newTask}\n        onChange={(e) => setNewTask(e.target.value)}\n        placeholder=\"Add a new task\"\n      />\n      <button onClick={addTask}>Add</button>\n      <TaskList tasks={tasks} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIF,OAAO,EAAE;MACXD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEK,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,IAAI,EAAEN,OAAO;QAAEO,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC;MACzEN,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,OAAQ;MACfgB,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAgB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAElB,OAAQ;MAAAO,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtClB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;AAAChB,EAAA,CAxBQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}